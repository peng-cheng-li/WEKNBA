{"version":3,"file":"react-hotkeys-hook.cjs.development.js","sources":["../src/parseHotkeys.ts","../src/isHotkeyPressed.ts","../src/validators.ts","../src/BoundHotkeysProxyProvider.tsx","../src/deepEqual.ts","../src/HotkeysProvider.tsx","../src/useDeepEqualMemo.ts","../src/useHotkeys.ts","../src/useRecordHotkeys.ts"],"sourcesContent":["import { Hotkey, KeyboardModifiers, Keys } from './types'\n\nconst reservedModifierKeywords = ['shift', 'alt', 'meta', 'mod']\n\nconst mappedKeys: Record<string, string> = {\n  esc: 'escape',\n  return: 'enter',\n  '.': 'period',\n  ',': 'comma',\n  '-': 'slash',\n  ' ': 'space',\n  '#': 'backslash',\n  '+': 'bracketright',\n  'ShiftLeft': 'shift',\n  'ShiftRight': 'shift',\n  'AltLeft': 'alt',\n  'AltRight': 'alt',\n  'MetaLeft': 'meta',\n  'MetaRight': 'meta',\n  'ControlLeft': 'ctrl',\n  'ControlRight': 'ctrl',\n}\n\nexport function mapKey(key: string): string {\n  return (mappedKeys[key] || key)\n    .trim()\n    .toLowerCase()\n    .replace('key', '')\n    .replace('digit', '')\n    .replace('numpad', '')\n    .replace('arrow', '')\n}\n\nexport function isHotkeyModifier(key: string) {\n  return reservedModifierKeywords.includes(key)\n}\n\nexport function parseKeysHookInput(keys: Keys, splitKey: string = ','): string[] {\n  if (typeof keys === 'string') {\n    return keys.split(splitKey)\n  }\n\n  return keys\n}\n\nexport function parseHotkey(hotkey: string, combinationKey: string = '+'): Hotkey {\n  const keys = hotkey\n    .toLocaleLowerCase()\n    .split(combinationKey)\n    .map(k => mapKey(k))\n\n  const modifiers: KeyboardModifiers = {\n    alt: keys.includes('alt'),\n    shift: keys.includes('shift'),\n    meta: keys.includes('meta'),\n    mod: keys.includes('mod'),\n  }\n\n  const singleCharKeys = keys.filter((k) => !reservedModifierKeywords.includes(k))\n\n  return {\n    ...modifiers,\n    keys: singleCharKeys,\n  }\n}\n","import { isHotkeyModifier, mapKey } from './parseHotkeys'\n\nconst currentlyPressedKeys: Set<string> = new Set<string>()\n\nexport function isHotkeyPressed(key: string | string[], splitKey: string = ','): boolean {\n  const hotkeyArray = Array.isArray(key) ? key : key.split(splitKey)\n\n  return hotkeyArray.every((hotkey) => currentlyPressedKeys.has(hotkey.trim().toLowerCase()))\n}\n\nexport function pushToCurrentlyPressedKeys(key: string | string[]): void {\n  const hotkeyArray = Array.isArray(key) ? key : [key]\n\n  /*\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\n   */\n  if (currentlyPressedKeys.has('meta')) {\n    currentlyPressedKeys.forEach(key => !isHotkeyModifier(key) && currentlyPressedKeys.delete(key.toLowerCase()))\n  }\n\n  hotkeyArray.forEach(hotkey => currentlyPressedKeys.add(hotkey.toLowerCase()))\n}\n\nexport function removeFromCurrentlyPressedKeys(key: string | string[]): void {\n  const hotkeyArray = Array.isArray(key) ? key : [key]\n\n  /*\n  Due to a weird behavior on macOS we need to clear the set if the user pressed down the meta key and presses another key.\n  https://stackoverflow.com/questions/11818637/why-does-javascript-drop-keyup-events-when-the-metakey-is-pressed-on-mac-browser\n  Otherwise the set will hold all ever pressed keys while the meta key is down which leads to wrong results.\n   */\n  if (key === 'meta') {\n    currentlyPressedKeys.clear()\n  } else {\n    hotkeyArray.forEach(hotkey => currentlyPressedKeys.delete(hotkey.toLowerCase()))\n  }\n}\n\n(() => {\n  if (typeof document !== 'undefined') {\n    document.addEventListener('keydown', e => {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return\n      }\n\n      pushToCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)])\n    })\n\n    document.addEventListener('keyup', e => {\n      if (e.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return\n      }\n\n      removeFromCurrentlyPressedKeys([mapKey(e.key), mapKey(e.code)])\n    })\n  }\n\n  if (typeof window !== 'undefined') {\n    window.addEventListener('blur', () => {\n      currentlyPressedKeys.clear()\n    })\n  }\n})()\n","import { FormTags, Hotkey, Scopes, Trigger } from './types'\nimport { isHotkeyPressed } from './isHotkeyPressed'\nimport { mapKey } from './parseHotkeys'\n\nexport function maybePreventDefault(e: KeyboardEvent, hotkey: Hotkey, preventDefault?: Trigger): void {\n  if ((typeof preventDefault === 'function' && preventDefault(e, hotkey)) || preventDefault === true) {\n    e.preventDefault()\n  }\n}\n\nexport function isHotkeyEnabled(e: KeyboardEvent, hotkey: Hotkey, enabled?: Trigger): boolean {\n  if (typeof enabled === 'function') {\n    return enabled(e, hotkey)\n  }\n\n  return enabled === true || enabled === undefined\n}\n\nexport function isKeyboardEventTriggeredByInput(ev: KeyboardEvent): boolean {\n  return isHotkeyEnabledOnTag(ev, ['input', 'textarea', 'select'])\n}\n\nexport function isHotkeyEnabledOnTag({ target }: KeyboardEvent, enabledOnTags: FormTags[] | boolean = false): boolean {\n  const targetTagName = target && (target as HTMLElement).tagName\n\n  if (enabledOnTags instanceof Array) {\n    return Boolean(targetTagName && enabledOnTags && enabledOnTags.some(tag => tag.toLowerCase() === targetTagName.toLowerCase()))\n  }\n\n  return Boolean(targetTagName && enabledOnTags && enabledOnTags === true)\n}\n\nexport function isScopeActive(activeScopes: string[], scopes?: Scopes): boolean {\n  if (activeScopes.length === 0 && scopes) {\n    console.warn(\n      'A hotkey has the \"scopes\" option set, however no active scopes were found. If you want to use the global scopes feature, you need to wrap your app in a <HotkeysProvider>',\n    )\n\n    return true\n  }\n\n  if (!scopes) {\n    return true\n  }\n\n  return activeScopes.some(scope => scopes.includes(scope)) || activeScopes.includes('*')\n}\n\nexport const isHotkeyMatchingKeyboardEvent = (e: KeyboardEvent, hotkey: Hotkey, ignoreModifiers: boolean = false): boolean => {\n  const { alt, meta, mod, shift, keys } = hotkey\n  const { key: pressedKeyUppercase, code } = e\n\n  const altKey = isHotkeyPressed('alt')\n  const shiftKey = isHotkeyPressed('shift')\n  const metaKey = isHotkeyPressed('meta')\n  const ctrlKey = isHotkeyPressed('ctrl')\n\n  const keyCode = mapKey(code)\n  const pressedKey = pressedKeyUppercase.toLowerCase()\n\n  if (!ignoreModifiers) {\n    if (altKey !== alt && pressedKey !== 'alt') {\n      return false\n    }\n\n    if (shiftKey !== shift && pressedKey !== 'shift') {\n      return false\n    }\n\n    // Mod is a special key name that is checking for meta on macOS and ctrl on other platforms\n    if (mod) {\n      if (!metaKey && !ctrlKey) {\n        return false\n      }\n    } else {\n      if (metaKey !== meta && ctrlKey !== meta && keyCode !== 'meta' && keyCode !== 'ctrl') {\n        return false\n      }\n    }\n  }\n\n  // All modifiers are correct, now check the key\n  // If the key is set, we check for the key\n  if (keys && keys.length === 1 && (keys.includes(pressedKey) || keys.includes(keyCode))) {\n    return true\n  } else if (keys) {\n    // Check if all keys are present in pressedDownKeys set\n    return isHotkeyPressed(keys)\n  } else if (!keys) {\n    // If the key is not set, we only listen for modifiers, that check went alright, so we return true\n    return true\n  }\n\n  // There is nothing that matches.\n  return false\n}\n","import { createContext, ReactNode, useContext } from 'react'\nimport { Hotkey } from './types'\n\ntype BoundHotkeysProxyProviderType = {\n  addHotkey: (hotkey: Hotkey) => void,\n  removeHotkey: (hotkey: Hotkey) => void,\n}\n\nconst BoundHotkeysProxyProvider = createContext<BoundHotkeysProxyProviderType | undefined>(undefined)\n\nexport const useBoundHotkeysProxy = () => {\n  return useContext(BoundHotkeysProxyProvider)\n}\n\ninterface Props {\n  children: ReactNode\n  addHotkey: (hotkey: Hotkey) => void\n  removeHotkey: (hotkey: Hotkey) => void\n}\n\nexport default function BoundHotkeysProxyProviderProvider({ addHotkey, removeHotkey, children }: Props) {\n  return <BoundHotkeysProxyProvider.Provider value={{addHotkey, removeHotkey}}>{children}</BoundHotkeysProxyProvider.Provider>\n}\n","export default function deepEqual(x: any, y: any): boolean {\n  //@ts-ignore\n  return (x && y && typeof x === 'object' && typeof y === 'object')\n    //@ts-ignore\n    ? (Object.keys(x).length === Object.keys(y).length) && Object.keys(x).reduce(function(isEqual, key) {\n      return isEqual && deepEqual(x[key], y[key])\n    }, true)\n    : (x === y)\n}\n","import { Hotkey } from './types'\nimport { createContext, ReactNode, useState, useContext, useCallback } from 'react'\nimport BoundHotkeysProxyProviderProvider from './BoundHotkeysProxyProvider'\nimport deepEqual from './deepEqual'\n\nexport type HotkeysContextType = {\n  hotkeys: ReadonlyArray<Hotkey>\n  enabledScopes: string[]\n  toggleScope: (scope: string) => void\n  enableScope: (scope: string) => void\n  disableScope: (scope: string) => void\n}\n\n// The context is only needed for special features like global scoping, so we use a graceful default fallback\nconst HotkeysContext = createContext<HotkeysContextType>({\n  hotkeys: [],\n  enabledScopes: [], // This array has to be empty instead of containing '*' as default, to check if the provider is set or not\n  toggleScope: () => {},\n  enableScope: () => {},\n  disableScope: () => {},\n})\n\nexport const useHotkeysContext = () => {\n  return useContext(HotkeysContext)\n}\n\ninterface Props {\n  initiallyActiveScopes?: string[]\n  children: ReactNode\n}\n\nexport const HotkeysProvider = ({initiallyActiveScopes = ['*'], children}: Props) => {\n  const [internalActiveScopes, setInternalActiveScopes] = useState(initiallyActiveScopes?.length > 0 ? initiallyActiveScopes : ['*'])\n  const [boundHotkeys, setBoundHotkeys] = useState<Hotkey[]>([]);\n\n  const enableScope = useCallback((scope: string) => {\n    setInternalActiveScopes((prev) => {\n      if (prev.includes('*')) {\n        return [scope]\n      }\n\n      return Array.from(new Set([...prev, scope]))\n    })\n  }, [])\n\n  const disableScope = useCallback((scope: string) => {\n    setInternalActiveScopes((prev) => {\n      if (prev.filter(s => s !== scope).length === 0) {\n        return ['*']\n      } else {\n        return prev.filter(s => s !== scope)\n      }\n    })\n  }, [])\n\n  const toggleScope = useCallback((scope: string) => {\n    setInternalActiveScopes((prev) => {\n      if (prev.includes(scope)) {\n        if (prev.filter(s => s !== scope).length === 0) {\n          return ['*']\n        } else {\n          return prev.filter(s => s !== scope)\n        }\n      } else {\n        if (prev.includes('*')) {\n          return [scope]\n        }\n\n        return Array.from(new Set([...prev, scope]))\n      }\n    })\n  }, [])\n\n  const addBoundHotkey = useCallback((hotkey: Hotkey) => {\n    setBoundHotkeys((prev) => [...prev, hotkey])\n  }, [])\n\n  const removeBoundHotkey = useCallback((hotkey: Hotkey) => {\n    setBoundHotkeys((prev) => prev.filter(h => !deepEqual(h, hotkey)))\n  }, [])\n\n  return (\n    <HotkeysContext.Provider value={{enabledScopes: internalActiveScopes, hotkeys: boundHotkeys, enableScope, disableScope, toggleScope}}>\n      <BoundHotkeysProxyProviderProvider addHotkey={addBoundHotkey} removeHotkey={removeBoundHotkey}>\n        {children}\n      </BoundHotkeysProxyProviderProvider>\n    </HotkeysContext.Provider>\n  )\n}\n","import { useRef } from 'react'\nimport deepEqual from './deepEqual'\n\nexport default function useDeepEqualMemo<T>(value: T) {\n  const ref = useRef<T | undefined>(undefined)\n\n  if (!deepEqual(ref.current, value)) {\n    ref.current = value\n  }\n\n  return ref.current\n}\n","import { HotkeyCallback, Keys, Options, OptionsOrDependencyArray, RefType } from './types'\nimport { DependencyList, useCallback, useEffect, useLayoutEffect, useRef } from 'react'\nimport { mapKey, parseHotkey, parseKeysHookInput } from './parseHotkeys'\nimport {\n  isHotkeyEnabled,\n  isHotkeyEnabledOnTag,\n  isHotkeyMatchingKeyboardEvent,\n  isKeyboardEventTriggeredByInput,\n  isScopeActive,\n  maybePreventDefault,\n} from './validators'\nimport { useHotkeysContext } from './HotkeysProvider'\nimport { useBoundHotkeysProxy } from './BoundHotkeysProxyProvider'\nimport useDeepEqualMemo from './useDeepEqualMemo'\nimport { pushToCurrentlyPressedKeys, removeFromCurrentlyPressedKeys } from './isHotkeyPressed'\n\nconst stopPropagation = (e: KeyboardEvent): void => {\n  e.stopPropagation()\n  e.preventDefault()\n  e.stopImmediatePropagation()\n}\n\nconst useSafeLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\n\nexport default function useHotkeys<T extends HTMLElement>(\n  keys: Keys,\n  callback: HotkeyCallback,\n  options?: OptionsOrDependencyArray,\n  dependencies?: OptionsOrDependencyArray,\n) {\n  const ref = useRef<RefType<T>>(null)\n  const hasTriggeredRef = useRef(false)\n\n  const _options: Options | undefined = !(options instanceof Array) ? (options as Options) : !(dependencies instanceof Array) ? (dependencies as Options) : undefined\n  const _deps: DependencyList = options instanceof Array ? options : dependencies instanceof Array ? dependencies : []\n\n  const cb = useCallback(callback, [..._deps])\n  const memoisedOptions = useDeepEqualMemo(_options)\n\n  const { enabledScopes } = useHotkeysContext()\n  const proxy = useBoundHotkeysProxy()\n\n  useSafeLayoutEffect(() => {\n    if (memoisedOptions?.enabled === false || !isScopeActive(enabledScopes, memoisedOptions?.scopes)) {\n      return\n    }\n\n    const listener = (e: KeyboardEvent, isKeyUp: boolean = false) => {\n      if (isKeyboardEventTriggeredByInput(e) && !isHotkeyEnabledOnTag(e, memoisedOptions?.enableOnFormTags)) {\n        return\n      }\n\n      // TODO: SINCE THE EVENT IS NOW ATTACHED TO THE REF, THE ACTIVE ELEMENT CAN NEVER BE INSIDE THE REF. THE HOTKEY ONLY TRIGGERS IF THE\n      // REF IS THE ACTIVE ELEMENT. THIS IS A PROBLEM SINCE FOCUSED SUB COMPONENTS WON'T TRIGGER THE HOTKEY.\n      if (ref.current !== null && document.activeElement !== ref.current && !ref.current.contains(document.activeElement)) {\n        stopPropagation(e)\n\n        return\n      }\n\n      if (((e.target as HTMLElement)?.isContentEditable && !memoisedOptions?.enableOnContentEditable)) {\n        return\n      }\n\n      parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => {\n        const hotkey = parseHotkey(key, memoisedOptions?.combinationKey)\n\n        if ((isHotkeyMatchingKeyboardEvent(e, hotkey, memoisedOptions?.ignoreModifiers) || hotkey.keys?.includes('*')) && !hasTriggeredRef.current) {\n          maybePreventDefault(e, hotkey, memoisedOptions?.preventDefault)\n\n          if (!isHotkeyEnabled(e, hotkey, memoisedOptions?.enabled)) {\n            stopPropagation(e)\n\n            return\n          }\n\n          // Execute the user callback for that hotkey\n          cb(e, hotkey)\n\n          if (!isKeyUp) {\n            hasTriggeredRef.current = true\n          }\n        }\n      })\n    }\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return\n      }\n\n      pushToCurrentlyPressedKeys(mapKey(event.code))\n\n      if ((memoisedOptions?.keydown === undefined && memoisedOptions?.keyup !== true) || memoisedOptions?.keydown) {\n        listener(event)\n      }\n    }\n\n    const handleKeyUp = (event: KeyboardEvent) => {\n      if (event.key === undefined) {\n        // Synthetic event (e.g., Chrome autofill).  Ignore.\n        return\n      }\n\n      removeFromCurrentlyPressedKeys(mapKey(event.code))\n\n      hasTriggeredRef.current = false\n\n      if (memoisedOptions?.keyup) {\n        listener(event, true)\n      }\n    }\n\n    // @ts-ignore\n    (ref.current || _options?.document || document).addEventListener('keyup', handleKeyUp);\n    // @ts-ignore\n    (ref.current || _options?.document || document).addEventListener('keydown', handleKeyDown)\n\n    if (proxy) {\n      parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => proxy.addHotkey(parseHotkey(key, memoisedOptions?.combinationKey)))\n    }\n\n    return () => {\n      // @ts-ignore\n      (ref.current || _options?.document || document).removeEventListener('keyup', handleKeyUp);\n      // @ts-ignore\n      (ref.current || _options?.document || document).removeEventListener('keydown', handleKeyDown)\n\n      if (proxy) {\n        parseKeysHookInput(keys, memoisedOptions?.splitKey).forEach((key) => proxy.removeHotkey(parseHotkey(key, memoisedOptions?.combinationKey)))\n      }\n    }\n  }, [keys, cb, memoisedOptions, enabledScopes])\n\n  return ref\n}\n","import { useCallback, useState } from 'react'\nimport { mapKey } from './parseHotkeys'\n\nexport default function useRecordHotkeys() {\n  const [keys, setKeys] = useState(new Set<string>())\n  const [isRecording, setIsRecording] = useState(false);\n\n  const handler = useCallback((event: KeyboardEvent) => {\n    if (event.key === undefined) {\n      // Synthetic event (e.g., Chrome autofill).  Ignore.\n      return\n    }\n\n    event.preventDefault()\n    event.stopPropagation()\n\n    setKeys(prev => {\n      const newKeys = new Set(prev)\n\n      newKeys.add(mapKey(event.code))\n\n      return newKeys\n    })\n  }, [])\n\n  const stop = useCallback(() => {\n    if (typeof document !== 'undefined') {\n      document.removeEventListener('keydown', handler)\n\n      setIsRecording(false)\n    }\n  }, [handler])\n\n  const start = useCallback(() => {\n    setKeys(new Set<string>())\n\n    if (typeof document !== 'undefined') {\n      stop()\n\n      document.addEventListener('keydown', handler)\n\n      setIsRecording(true)\n    }\n  }, [handler, stop])\n\n  return [keys, { start, stop, isRecording }] as const\n}\n"],"names":["reservedModifierKeywords","mappedKeys","esc","mapKey","key","trim","toLowerCase","replace","isHotkeyModifier","includes","parseKeysHookInput","keys","splitKey","split","parseHotkey","hotkey","combinationKey","toLocaleLowerCase","map","k","modifiers","alt","shift","meta","mod","singleCharKeys","filter","currentlyPressedKeys","Set","isHotkeyPressed","hotkeyArray","Array","isArray","every","has","pushToCurrentlyPressedKeys","forEach","add","removeFromCurrentlyPressedKeys","clear","document","addEventListener","e","undefined","code","window","maybePreventDefault","preventDefault","isHotkeyEnabled","enabled","isKeyboardEventTriggeredByInput","ev","isHotkeyEnabledOnTag","enabledOnTags","target","targetTagName","tagName","Boolean","some","tag","isScopeActive","activeScopes","scopes","length","console","warn","scope","isHotkeyMatchingKeyboardEvent","ignoreModifiers","pressedKeyUppercase","altKey","shiftKey","metaKey","ctrlKey","keyCode","pressedKey","BoundHotkeysProxyProvider","createContext","useBoundHotkeysProxy","useContext","BoundHotkeysProxyProviderProvider","addHotkey","removeHotkey","children","_jsx","deepEqual","x","y","Object","reduce","isEqual","HotkeysContext","hotkeys","enabledScopes","toggleScope","enableScope","disableScope","useHotkeysContext","HotkeysProvider","initiallyActiveScopes","useState","internalActiveScopes","setInternalActiveScopes","boundHotkeys","setBoundHotkeys","useCallback","prev","from","s","addBoundHotkey","removeBoundHotkey","h","useDeepEqualMemo","value","ref","useRef","current","stopPropagation","stopImmediatePropagation","useSafeLayoutEffect","useLayoutEffect","useEffect","useHotkeys","callback","options","dependencies","hasTriggeredRef","_options","_deps","cb","memoisedOptions","proxy","listener","isKeyUp","enableOnFormTags","activeElement","contains","isContentEditable","enableOnContentEditable","handleKeyDown","event","keydown","keyup","handleKeyUp","removeEventListener","useRecordHotkeys","setKeys","isRecording","setIsRecording","handler","newKeys","stop","start"],"mappings":"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"}